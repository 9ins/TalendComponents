<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.metadata.IMetadataColumn 
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.metadata.types.JavaTypesManager
		org.talend.core.model.metadata.types.JavaType
		java.util.List 
    	java.util.Map		
	" 
%>
<% 
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();	
%>
       	<%
  		java.util.List<? extends IConnection> outConns = node.getOutgoingConnections();
      	for(IConnection conn : outConns) {
      		IMetadataTable metaTable = conn.getMetadataTable();
       		java.util.List<IMetadataColumn> columns = metaTable.getListColumns();
       		for(int i=0; i<columns.size(); i++) {
       			IMetadataColumn column = columns.get(i);
      			Object row = conn.getName()+"."+column.getLabel();
      			if(column.getLabel().equals("payload")) {
      			%>
          			<%=row%> = <%=cid%>_record.value();
       			<%
       			} else if(column.getLabel().equals("topic")) {
      			%>
          			<%=row%> = <%=cid%>_record.topic();
      			<%
       			} else if(column.getLabel().equals("partition")) {
      			%>
          			<%=row%> = <%=cid%>_record.partition();
       			<%
      			} else if(column.getLabel().equals("offset")) {
       			%>
          			<%=row%> = <%=cid%>_record.offset();
      			<%
       			}
       		}
      	}
        %>
        globalMap.put("<%=cid%>_CURRENT_LINE", ++<%=cid%>_recordCount);
        
		java.util.Map<org.apache.kafka.common.TopicPartition, org.apache.kafka.clients.consumer.OffsetAndMetadata> <%=cid%>_globalOffsetMap = (java.util.Map<org.apache.kafka.common.TopicPartition, org.apache.kafka.clients.consumer.OffsetAndMetadata>)globalMap.get("<%=cid%>_OFFSET_MAP");	
	    <%=cid%>_globalOffsetMap.put(new org.apache.kafka.common.TopicPartition(<%=cid%>_record.topic(), <%=cid%>_record.partition()), new org.apache.kafka.clients.consumer.OffsetAndMetadata(<%=cid%>_record.offset()));
        		   