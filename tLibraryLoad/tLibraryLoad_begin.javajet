<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.process.ElementParameterParser 
		java.util.List
		java.util.Map
	" 
%>

<%
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();
    List<Map<String, String>> hotLibs = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__HOTLIBS__");
%>

<% if(hotLibs!=null&&hotLibs.size() > 0){%>

java.net.URLClassLoader sysloader_<%=cid %> = (java.net.URLClassLoader) ClassLoader.getSystemClassLoader();
java.lang.reflect.Method method_<%=cid %> = java.net.URLClassLoader.class.getDeclaredMethod("addURL", new Class[] { java.net.URL.class });
method_<%=cid %>.setAccessible(true);

String[] libPaths_<%=cid %> = new String[] { <% for(Map<String, String> item : hotLibs){%> <%=item.get("LIBPATH") %>, <%}%> };
for(String lib_<%=cid %>:libPaths_<%=cid %> ){
	String separator_<%=cid %> = System.getProperty("path.separator");
	String[] jarFiles_<%=cid %> = lib_<%=cid %>.split(separator_<%=cid %>);	
	for(String jarFile_<%=cid %>:jarFiles_<%=cid %>){		
		method_<%=cid %>.invoke(sysloader_<%=cid %>, new Object[] { new java.io.File(jarFile_<%=cid %>).toURL() });
	}
}

<%}%>
